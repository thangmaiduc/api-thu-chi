{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "My API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "User",
      "description": "Endpoints"
    },
    {
      "name": "Group",
      "description": "Endpoints of Group"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "api_key",
      "in": "header"
    },
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "https://petstore.swagger.io/oauth/authorize",
      "flow": "implicit",
      "scopes": {
        "read_pets": "read your pets",
        "write_pets": "modify pets in your account"
      }
    }
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/": {
      "get": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Endpoint to login.",
        "parameters": [
          {
            "name": "userCredentials",
            "in": "body",
            "schema": {
              "required": [
                "email",
                "password"
              ],
              "properties": {
                "email": {
                  "type": "string",
                  "maxLength": 250,
                  "example": "thang@gmail.com"
                },
                "password": {
                  "type": "string",
                  "minLength": 7,
                  "maxLength": 250,
                  "example": "1234567"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful."
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found "
          },
          "422": {
            "description": "Validation failed."
          },
          "500": {
            "description": "Error Internal Server"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/auth/create": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Endpoint to sign up.",
        "parameters": [
          {
            "name": "newUser",
            "in": "body",
            "schema": {
              "required": [
                "name",
                "email",
                "password"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "maxLength": 250,
                  "example": "Thang Mai."
                },
                "email": {
                  "type": "string",
                  "maxLength": 250,
                  "example": "thang@gmail.com"
                },
                "password": {
                  "type": "string",
                  "minLength": 7,
                  "maxLength": 250,
                  "example": "1234567"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not found "
          },
          "422": {
            "description": "Validation failed."
          },
          "500": {
            "description": "Error Internal Server"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/auth/reset-password": {
      "put": {
        "tags": [
          "Auth"
        ],
        "description": "Endpoint reset password.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "resetLink": {
                  "example": "any"
                },
                "newPass": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found "
          },
          "422": {
            "description": "Validation failed."
          },
          "500": {
            "description": "Error Internal Server"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/auth/forgot-password": {
      "put": {
        "tags": [
          "Auth"
        ],
        "description": "Endpoint forgot password.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not found "
          },
          "500": {
            "description": "Error Internal Server"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/api/nhom/": {
      "get": {
        "tags": [
          "Group"
        ],
        "description": "Endpoint to get all group.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful.",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "not found any group"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/someSchema"
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Group"
        ],
        "description": "Endpoint to create a group.",
        "parameters": [
          {
            "name": "newGroup",
            "in": "body",
            "description": "Group information.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/addGroup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "created successfully"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/someSchema"
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/api/nhom/{id}": {
      "get": {
        "tags": [
          "Group"
        ],
        "description": "Endpoint to get all post in a group.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Group ID ."
          }
        ],
        "responses": {
          "200": {
            "description": "successful.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "_id": {
                    "type": "string",
                    "example": "620f63f20f474f81b4fae559"
                  },
                  "name": {
                    "type": "string",
                    "example": "tien tieu vat"
                  },
                  "color": {
                    "type": "string",
                    "example": "red"
                  },
                  "owner": {
                    "type": "string",
                    "example": "6209b5cdca0a9451ce1238c5"
                  },
                  "receipts": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/expenditures"
                    }
                  },
                  "expenditures": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/receipts"
                    }
                  }
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "not found any group"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/someSchema"
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Group"
        ],
        "description": "Endpoint to update a group.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Group ID."
          },
          {
            "name": "editGroup",
            "in": "body",
            "description": "Group information need edit.",
            "schema": {
              "$ref": "#/definitions/addGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful.",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "not found any group to edit"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/someSchema"
            },
            "description": "Error internal server"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Group"
        ],
        "description": "Endpoint to delete a group.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Group ID."
          },
          {
            "name": "editGroup",
            "in": "body",
            "description": "Group information need edit.",
            "schema": {
              "$ref": "#/definitions/addGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful."
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "not found any group to edit"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/someSchema"
            },
            "description": "Error internal server"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/api/khoan-thu-chi/thang/{date}": {
      "get": {
        "tags": [
          "Post"
        ],
        "description": "Endpoint to get all receipts, expenditures and total revenue, cost in a month.",
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "a date in month then determine which month.",
            "require": true
          }
        ],
        "responses": {
          "200": {
            "description": "successful.",
            "schema": {
              "type": "object",
              "properties": {
                "receipts": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/expenditures"
                  }
                },
                "expenditures": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/receipts"
                  }
                },
                "tongThu": {
                  "type": "number",
                  "example": 10000000
                },
                "tongChi": {
                  "type": "number",
                  "example": 3000000
                }
              },
              "xml": {
                "name": "main"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found any post"
          },
          "500": {
            "description": "Error Internal Server"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/api/khoan-thu-chi/{id}": {
      "get": {
        "tags": [
          "Post"
        ],
        "description": "Endpoint to get a receipts or a expenditure.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Receipts ID or Expenditure ID."
          }
        ],
        "responses": {
          "200": {
            "description": "successful.",
            "schema": {
              "$ref": "#/definitions/expenditures"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found any post"
          },
          "500": {
            "description": "Error Internal Server"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Post"
        ],
        "description": "Endpoint to update a post.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Receipts ID or Expenditure ID."
          },
          {
            "name": "editPost",
            "in": "body",
            "description": "Post information need edit.",
            "schema": {
              "$ref": "#/definitions/editPost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful.",
            "schema": {
              "$ref": "#/definitions/expenditures"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found any post"
          },
          "422": {
            "description": "Validation failed."
          },
          "500": {
            "description": "Error Internal Server"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Post"
        ],
        "description": "Endpoint to update a post.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Receipts ID or Expenditure ID."
          }
        ],
        "responses": {
          "204": {
            "description": "delete successfully."
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found any post"
          },
          "500": {
            "description": "Error Internal Server"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/api/khoan-thu-chi/": {
      "post": {
        "tags": [
          "Post"
        ],
        "description": "Endpoint to get all receipts, expenditures and total revenue, cost in a month.",
        "parameters": [
          {
            "name": "addPost",
            "in": "body",
            "description": "add a receipts or a expenditure",
            "schema": {
              "$ref": "#/definitions/addPost"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "successful."
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not found any post"
          },
          "422": {
            "description": "Validation failed."
          },
          "500": {
            "description": "Error Internal Server"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/api/users/me": {
      "patch": {
        "tags": [
          "User"
        ],
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/someSchema"
            },
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Jhon Doe"
        },
        "age": {
          "type": "number",
          "example": 29
        },
        "parents": {
          "type": "object",
          "properties": {
            "father": {
              "type": "string",
              "example": "Simon Doe"
            },
            "mother": {
              "type": "string",
              "example": "Marie Doe"
            }
          }
        },
        "diplomas": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "school": {
                "type": "string",
                "example": "XYZ University"
              },
              "year": {
                "type": "number",
                "example": 2020
              },
              "completed": {
                "type": "boolean",
                "example": true
              },
              "internship": {
                "type": "object",
                "properties": {
                  "hours": {
                    "type": "number",
                    "example": 290
                  },
                  "location": {
                    "type": "string",
                    "example": "XYZ Company"
                  }
                }
              }
            }
          }
        }
      }
    },
    "expenditures": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "620f03af4060306a30737a26"
        },
        "money": {
          "type": "number",
          "example": 101000
        },
        "note": {
          "type": "string",
          "example": "tra nợ cho TU"
        },
        "group": {
          "type": "string",
          "example": "620f63f20f474f81b4fae559"
        },
        "date": {
          "type": "string",
          "example": "2022-02-18T02:20:42.986Z"
        }
      }
    },
    "receipts": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "620f03af4060306a30737a26"
        },
        "money": {
          "type": "number",
          "example": 10000000
        },
        "note": {
          "type": "string",
          "example": "Tien luong thang 2"
        },
        "group": {
          "type": "string",
          "example": "620f63f20f474f81b4fae559"
        },
        "date": {
          "type": "string",
          "example": "2022-02-18T02:20:42.986Z"
        }
      }
    },
    "Group": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "example": "620f63f20f474f81b4fae559"
        },
        "name": {
          "type": "string",
          "example": "tien tieu vat"
        },
        "color": {
          "type": "string",
          "example": "red"
        }
      }
    },
    "addGroup": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Tiền lương"
        },
        "color": {
          "type": "string",
          "example": "ffff"
        }
      },
      "required": [
        "name",
        "color"
      ]
    },
    "addPost": {
      "type": "object",
      "properties": {
        "money": {
          "type": "number",
          "example": 10000000
        },
        "note": {
          "type": "string",
          "example": "Tien luong thang 2"
        },
        "group": {
          "type": "string",
          "example": "620f63f20f474f81b4fae559"
        },
        "date": {
          "type": "string",
          "example": "2022-02-18T02:20:42.986Z"
        },
        "type": {
          "type": "string",
          "example": "thu or chi"
        }
      }
    },
    "editPost": {
      "type": "object",
      "properties": {
        "money": {
          "type": "number",
          "example": 10000000
        },
        "note": {
          "type": "string",
          "example": "Tien luong thang 2"
        },
        "group": {
          "type": "string",
          "example": "620f63f20f474f81b4fae559"
        }
      }
    }
  }
}